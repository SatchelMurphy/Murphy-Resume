---
title: "Client Report - Late Flights and Missing Data"
subtitle: "Course DS 250"
author: "Satchel Murphy"
format:
  html:
    self-contained: true
    page-layout: full
    title-block-banner: true
    toc: true
    toc-depth: 3
    toc-location: body
    number-sections: false
    html-math-method: katex
    code-fold: true
    code-summary: "Show the code"
    code-overflow: wrap
    code-copy: hover
    code-tools:
        source: false
        toggle: true
        caption: See code
    
---

```{python}
#| label: libraries
#| include: false
import pandas as pd
import altair as alt
import numpy as np

from IPython.display import Markdown
from IPython.display import display
from tabulate import tabulate
```


## Elevator pitch

_paste your elevator pitch here_

```{python}
#| label: project data
#| code-summary: Read and format project data
# Include and execute your code here
url="https://raw.githubusercontent.com/byuidatascience/data4missing/master/data-raw/flights_missing/flights_missing.json"
flight_data=pd.read_json(url)
```

__Highlight the grand questions__

## GRAND QUESTION 1

__Which airport has the worst delays?__

_type your results and analysis here_

```{python}
#| label: Worst Delays
#| code-summary: Read and format data
# Include and execute your code here
flight_data = flight_data.assign(average_delay_time = flight_data.minutes_delayed_total/flight_data.num_of_delays_total)


```

_include figures in chunks and discuss your findings in the figure._

```{python}
#| label: Airport Delays
#| fig-cap: '"We were supposed to be leaving an hour ago!"'
#| fig-align: center
# Include and execute your code here
title="Among Other Airlines, ORD Has The Highest Overall Delay Times"
flight_chart = alt.Chart(flight_data, title=title, width=500).mark_boxplot().encode(
    x=alt.X("average_delay_time", title = "Minutes"),
    y=alt.Y("airport_code", title= "Airport Code")
    )


flight_data=flight_data.assign(hours_delayed_total=flight_data.minutes_delayed_total / 60)

flight_data.groupby("airport_code").agg(
    total_num_flights=('num_of_flights_total','sum'),
    total_delayed_flights=('num_of_delays_total', 'sum'),
    hours_delay_average=('hours_delayed_total', 'mean')
).assign(prop_delayed_flights = lambda x: x.total_delayed_flights / x.total_num_flights )

flight_chart.encoding.x.scale = alt.Scale(domain=[30, 100])

flight_chart

```


```{python}
#| label: GQ1 table
#| code-summary: table example
#| tbl-cap: "Not much of a table"
#| tbl-cap-location: top
# Include and execute your code here
flight_data = flight_data.head(1000)\
    .groupby(['airport_name', 'minutes_delayed_total','year'])\
    .mean()\
    .tail(15)\
    .filter(["airport_name"])

display(flight_data)

```


## GRAND QUESTION 2

__What is the best month to fly if you want to avoid delays of any length?__

_type your results and analysis here_

```{python}
#| label: GQ2
#| code-summary: Read and format data
# Include and execute your code here


```

_include figures in chunks and discuss your findings in the figure._

```{python}
#| label: GQ2 chart
#| code-summary: plot example
#| fig-cap: "My useless chart"
#| fig-align: center


title_q2 = "The Overall Worst Month to Fly is Either August or October"

flight_chart_month_delays = alt.Chart(flight_data.dropna(subset= 'month'), title=title_q2, width=500).mark_bar().encode(x=alt.X("month", title = "Months"),y=alt.Y("num_of_delays_total", title= "Total Delays"))

flight_chart_month_delays
```


```{python}
#| label: GQ2 table
#| code-summary: table example
#| tbl-cap: "Not much of a table"
#| tbl-cap-location: top
# Include and execute your code here
#mydat = dat.head(1000)\
#    .groupby('year')\
#    .sum()\
#    .reset_index()\
#    .tail(10)\
#    .filter(["year", "AK","AR"])

#display(mydat)

```


## GRAND QUESTION 3

__Is there a significant impact with "Mild" weather delays?__

_type your results and analysis here_

```{python}
#| label: GQ3
#| code-summary: Read and format data
# Include and execute your code here


```

_include figures in chunks and discuss your findings in the figure._

```{python}
#| label: GQ3 chart
#| code-summary: plot example
#| fig-cap: "My useless chart"
#| fig-align: center
# Include and execute your code here
#alt.Chart(dat.head(200))\
#    .encode(x = "name", y = "AK")\
#    .mark_bar()
```


```{python}
#| label: GQ3 table
#| code-summary: table example
#| tbl-cap: "Not much of a table"
#| tbl-cap-location: top
# Include and execute your code here
#mydat = dat.head(1000)\
#    .groupby('year')\
#    .sum()\
#    .reset_index()\
#    .tail(10)\
#    .filter(["year", "AK","AR"])

#display(mydat)

```



## APPENDIX A (Additional Python Code)

```python
#paste other your code from your python file (.py) here
```
